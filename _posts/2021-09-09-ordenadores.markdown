---
layout: post
title: "La m√≠nima expresi√≥n de un ordenador"
subtitle: "Los ordenadores no son tan complicados, en realidad"
date: 2021-09-09 10:45:13 +1000
categories:
  - esenciales
background: '/img/bg-default.jpg'
image: '/img/bg-default.jpg'
---
En realidad, un ordenador es una m√°quina de procesar de informaci√≥n. S√≥lo es capaz de hacer, muy bien y muy r√°pido, lo siguiente:

1. Se introducen unos **datos de entrada**,
2. el ordenador lleva a cabo uno o varios **procesos** sobre los datos de entrada,
3. y entrega unos **datos de salida** con el resultado del proceso.

Esta lista de pasos suele representarse de la siguiente forma:

{% include image.html url="/img/posts/ordenadores-proceso.png" description="Procesando informaci√≥n" style="width: 60%" %}

A simple vista, puedes pensar que estoy *sobresimplificando* esa m√°quina que tienes delante. Que eso se parece m√°s a lo que puede hacer una calculadora de lo m√°s rudimentaria, que acepta dos *operandos* (los datos de entrada), una *operaci√≥n* (el proceso) para devolver un *resultado* (los datos de salida). Sin embargo, es lo √∫nico que hace cualquier ordenador, por avanzado que sea y por muy sofisticada que sea la forma que tienen de representar los resultados con ventanas, v√≠deos, animaciones, sonidos y texto con formato.

Cuando enciendes un ordenador, √©ste se quedar√° esperando a que le indiques qu√© quieres hacer. Normalmente, y a no ser que solamente quieras ver la hora en el reloj del sistema, deber√°s abrir una **aplicaci√≥n**. *Aplicaciones*, o m√°s generalmente, *programas*, es la forma que grupos de procesos toman ante nosotros en la pr√°ctica, como veremos a continuaci√≥n.

{% include image.html url="/img/posts/windows-10.png" description="El escritorio de Windows 10" %}

Los datos de entrada para ese proceso consisten en la aplicaci√≥n que quieres abrir, el proceso consiste en cargarla en memoria y ejecutarla, y los datos de salida suelen ser una pista de que se ha ejecutado o se est√° ejecutando. En su forma m√°s sofisticada, eso consiste en mostrar una ventana gr√°fica completa, con men√∫s, botones y toda una serie de controles y gr√°ficos. Pero, en esencia, lo que ha ocurrido es lo que hemos explicado arriba: introducir unos datos de entrada, procesarlos, y producir unos datos de salida.

Si la aplicaci√≥n que has abierto es un procesador de textos, como [Microsoft Word](https://es.wikipedia.org/wiki/Microsoft_Word), [LibreOffice Writer](https://es.libreoffice.org/descubre/writer/) o [Apple Pages](https://www.apple.com/es/pages/), √©ste va a quedarse esperando, de nuevo, por datos de entrada. En este caso, esos datos son texto, los procesos van a ser la serie de operaciones de formato y maquetaci√≥n que queramos aplicar, y los datos de salida consistir√°n en el documento que vemos tomar forma ante nosotros. 

{% include image.html url="/img/posts/word.png" description="Un procesador de textos (Microsoft Word)" %}

Con una hoja de c√°lculo, o con cualquier otra aplicaci√≥n de productividad ofim√°tica, la mec√°nica es la misma.

Para terminar con los ejemplos veamos uno mucho m√°s complejo por la variedad de datos de salida que produce, y la forma que toman: un videojuego sencillo. En este tipo de programas, los datos de entrada, los procesos y los datos de salida ser√°n mucho m√°s numerosos y diversos, en forma de gr√°ficos, sonido, acciones sobre controladores de videojuegos (üéÆ) y un largo etc√©tera.

‚Äú[Pac-Man](https://es.wikipedia.org/wiki/Pac-Man)‚Äù o, como se llam√≥ en Espa√±a, come-cocos, tiene como protagonista [a una pelota amarilla que debe comerse todos los objetos de un laberinto](https://en.wikipedia.org/wiki/File:Pac-man.png), evitando a cuatro fantasmas. Si el protagonista se come un elemento especial, que por aquel entonces llam√°bamos ‚Äúvitamina‚Äù, las tornas se giran durante unos segundos y podremos ‚Äúcomernos‚Äù a los fantasmas, que ahora escapan, para enviarlos a una c√°rcel temporal. 

Los datos de entrada vienen dados por: 

1. Tu uso del control, que mueve al protagonista en una direcci√≥n
2. La posici√≥n relativa del protagonista con respecto a las paredes del laberinto, a los elementos que quedan disponibles en el laberinto, y a los fantasmas
3. El √∫ltimo elemento que el protagonista ha comido, cuyo tipo puede afectar al comportamiento de los fantasmas.
4. Cu√°ntos elementos quedan en el laberinto

El funcionamiento del videojuego consta de **muchos procesos, cada uno con sus datos de salida** en forma de consecuencias en el propio videojuego, y acci√≥n, en forma de gr√°ficos en movimiento: 

- si el protagonista intenta moverse:
  - hacia una pared inmediatamente contigua, no se podr√° mover, 
  - contra un fantasma inmediatamente contiguo: 
    - hemos perdido una vida, 
    - pero si eso ocurre durante los efectos de la ‚Äúvitamina‚Äù, quien pierde es el fantasma; 
  - contra un elemento ‚Äúcomestible‚Äù, acumula puntos; 
    - si el elemento es una vitamina, los fantasmas escapar√°n, 
    - si choca es el √∫ltimo elemento que quedaba por comer, hemos ganado el nivel.
- si no choca con nada, o s√≥lo choca con un elemento comestible, entonces el comecocos se mover√° en la direcci√≥n especificada por el jugador.
- durante estos procesos, adem√°s, todos los fantasmas se mueven aleatoriamente por el laberinto.

En esencia, los ordenadores son procesadores de informaci√≥n que gozan de toda una serie de posibilidades que los hacen vers√°tiles para m√∫ltiples tareas. A diferencia de sistemas m√°s especializados como la calculadora del ejemplo, los ordenadores tienen un **prop√≥sito general**, de tal forma que son capaces de realizar muchos procesos, muy r√°pido, a menudo varios a la vez, mostrando resultados de diferentes formas. 

Un concepto tan sencillo como el esquema de proceso en tres pasos introducido al principio de este art√≠culo es la base para entender, pr√°cticamente, todo lo que ocurre en un ordenador. A lo largo de la vida de este blog llegaremos a ver y usar esa secuencia l√≥gica de operaciones en muchas ocasiones, como puede ser programar o automatizar tareas.
